{"version":3,"sources":["components/Container/Container.module.css","components/Modal/Modal.module.css","components/ModalEdit/Modal.module.css","components/Container/Container.jsx","components/AddForm/AddForm.jsx","api/api.js","redux/products/products-operations.js","components/Modal/Modal.jsx","redux/products/products-selectors.js","components/EditForm/EditForm.jsx","components/ModalEdit/ModalEdit.jsx","components/ProductsList/ProductsList.jsx","App.jsx","redux/products/products-actions.js","redux/products/products-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","INITIAL_STATE","name","count","imageUrl","width","height","weight","comments","AddForm","onSubmit","onClose","useState","formData","setFormData","handleChange","e","target","value","preventDefault","type","onChange","required","onClick","getProducts","a","axios","get","data","deleteProduct","id","delete","setProduct","all","post","getProductById","editProductById","obj","patch","defaults","baseURL","createAsyncThunk","_","rejectWithValue","productsAPI","products","modalRoot","document","querySelector","Modal","dispatch","useDispatch","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","currentTarget","getProduct","state","items","EditForm","product","ModalEdit","ProductsList","deleteProd","showModal","setShowModal","showModalEdit","setShowModalEdit","map","then","App","useSelector","createAction","payload","createReducer","fulfilled","filter","combineReducers","store","configureStore","reducer","productsReducer","devTools","process","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c46582b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1dtWB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__T6FnR\",\"Modal\":\"Modal_Modal__1bVkh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__IoC2P\",\"Modal\":\"Modal_Modal__32cRq\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddForm.module.css';\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  count: '',\r\n  imageUrl: '/',\r\n  width: '',\r\n  height: '',\r\n  weight: '',\r\n  comments: '',\r\n};\r\n\r\nfunction AddForm({ onSubmit, onClose }) {\r\n  const [formData, setFormData] = useState({ ...INITIAL_STATE });\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ ...formData });\r\n    setFormData({ ...INITIAL_STATE });\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const { name, count, width, height, weight, comments } = formData;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        count\r\n        <input\r\n          type=\"text\"\r\n          name=\"count\"\r\n          value={count}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        width\r\n        <input\r\n          type=\"text\"\r\n          name=\"width\"\r\n          value={width}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        height\r\n        <input\r\n          type=\"text\"\r\n          name=\"height\"\r\n          value={height}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        weight\r\n        <input\r\n          type=\"text\"\r\n          name=\"weight\"\r\n          value={weight}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        comments\r\n        <input\r\n          type=\"textarea\"\r\n          name=\"comments\"\r\n          value={comments}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Add product</button>\r\n      <button type=\"button\" onClick={onClose}>\r\n        Close\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nAddForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default AddForm;\r\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\n// export const getProducts = createAsyncThunk('products/get', async () => {\n//   try {\n//     const { data } = await axios.get('/products');\n\n//     return data;\n//   } catch (error) {\n//     alert(error.message);\n//   }\n// });\n\nexport async function getProducts() {\n  const { data } = await axios.get(`/products`);\n  return data;\n}\n\nexport async function deleteProduct(id) {\n  const { data } = await axios.delete(`/products/${id}`);\n  return data;\n}\n\nexport async function setProduct(all) {\n  const { data } = await axios.post(`/products`, all);\n  return data;\n}\n\nexport async function getProductById(id) {\n  const { data } = await axios.get(`/products/${id}`);\n  return data;\n}\n\nexport async function editProductById(obj) {\n  const { data } = await axios.patch(`/products/${obj.id}`, obj);\n  return data;\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as productsAPI from '../../api/api';\n\nexport const getProducts = createAsyncThunk(\n  'product/get',\n  async (_, { rejectWithValue }) => {\n    try {\n      const products = await productsAPI.getProducts();\n      return products;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deleteProduct = createAsyncThunk(\n  'product/delete',\n  async (id, { rejectWithValue }) => {\n    try {\n      const products = await productsAPI.deleteProduct(id);\n      return products;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const setProduct = createAsyncThunk(\n  'product/add',\n  async (all, { rejectWithValue }) => {\n    try {\n      const products = await productsAPI.setProduct(all);\n      return products;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const getProductById = createAsyncThunk(\n  'product/getId',\n  async (id, { rejectWithValue }) => {\n    try {\n      const products = await productsAPI.getProductById(id);\n      return products;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const editProductById = createAsyncThunk(\n  'product/edit',\n  async (id, { rejectWithValue }) => {\n    try {\n      const products = await productsAPI.editProductById(id);\n      return products;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n","import { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\nimport AddForm from '../AddForm/AddForm';\r\nimport { setProduct } from '../../redux/products/products-operations';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nfunction Modal({ onClose }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const addProduct = data => {\r\n    dispatch(setProduct(data));\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleBackdropClick}>\r\n      <AddForm onSubmit={addProduct} onClose={onClose} />\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func,\r\n  img: PropTypes.string,\r\n};\r\n\r\nexport default Modal;\r\n","export const getProduct = state => state.products.items;\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './EditForm.module.css';\r\nimport { editProductById } from '../../api/api';\r\n\r\nfunction EditForm({ onClose, product }) {\r\n  const [formData, setFormData] = useState({ ...product });\r\n\r\n  useEffect(() => {\r\n    setFormData({\r\n      ...product,\r\n    });\r\n  }, [product]);\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    editProductById(formData);\r\n    onClose();\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...product,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const { name, count, width, height, weight, comments } = formData;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        count\r\n        <input\r\n          type=\"text\"\r\n          name=\"count\"\r\n          value={count}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        width\r\n        <input\r\n          type=\"text\"\r\n          name=\"width\"\r\n          value={width}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        height\r\n        <input\r\n          type=\"text\"\r\n          name=\"height\"\r\n          value={height}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        weight\r\n        <input\r\n          type=\"text\"\r\n          name=\"weight\"\r\n          value={weight}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        comments\r\n        <input\r\n          type=\"textarea\"\r\n          name=\"comments\"\r\n          value={comments}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Confirm</button>\r\n      <button type=\"button\" onClick={onClose}>\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default EditForm;\r\n","import { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\n\r\nimport { setProduct } from '../../redux/products/products-operations';\r\nimport EditForm from '../EditForm/EditForm';\r\n\r\nconst modalRoot = document.querySelector('#modal-root2');\r\n\r\nfunction ModalEdit({ onClose, product }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const addProduct = data => {\r\n    dispatch(setProduct(data));\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleBackdropClick}>\r\n      <EditForm onSubmit={addProduct} onClose={onClose} product={product} />\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModalEdit.propTypes = {\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default ModalEdit;\r\n","import { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './ProductsList.module.css';\r\nimport Modal from '../Modal/Modal';\r\nimport { getProduct } from '../../redux/products/products-selectors';\r\n// import { getProductById } from '../../redux/products/products-operations';\r\nimport EditForm from '../EditForm/EditForm';\r\nimport { getProductById } from '../../api/api';\r\nimport ModalEdit from '../ModalEdit/ModalEdit';\r\nimport { getProducts } from '../../redux/products/products-operations';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  count: '',\r\n  imageUrl: '/',\r\n  width: '',\r\n  height: '',\r\n  weight: '',\r\n  comments: '',\r\n};\r\n\r\nconst ProductsList = ({ products, deleteProd }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModalEdit, setShowModalEdit] = useState(false);\r\n  const [product, setProduct] = useState({ ...INITIAL_STATE });\r\n  const dispatch = useDispatch();\r\n\r\n  const onItmClick = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n  const onClose = () => {\r\n    setShowModal(false);\r\n  };\r\n  const onCloseEdit = () => {\r\n    setShowModalEdit(false);\r\n    setProduct({ ...INITIAL_STATE });\r\n    dispatch(getProducts());\r\n  };\r\n  const editProd = id => {\r\n    getProductById(id)\r\n      .then(data => setProduct({ ...data }))\r\n      .then(setShowModalEdit(true));\r\n  };\r\n  return (\r\n    <ul>\r\n      {products &&\r\n        products.map(product => (\r\n          <li key={product.id}>\r\n            <h3>{product.name}</h3>\r\n            <p>Count: {product.count}</p>\r\n            <p>width: {product.width}</p>\r\n            <p>height: {product.height}</p>\r\n            <p>weight: {product.weight}</p>\r\n            <button type=\"button\" onClick={() => deleteProd(product.id)}>\r\n              Delete\r\n            </button>\r\n            <button type=\"button\" onClick={() => editProd(product.id)}>\r\n              Edit\r\n            </button>\r\n          </li>\r\n        ))}\r\n      {showModal && <Modal onClose={onClose} />}\r\n      {showModalEdit && <ModalEdit onClose={onCloseEdit} product={product} />}\r\n    </ul>\r\n  );\r\n};\r\n\r\nProductsList.propTypes = {\r\n  products: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ProductsList;\r\n","import { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Container from './components/Container/Container';\r\nimport AddForm from './components/AddForm/AddForm';\r\nimport ProductsList from './components/ProductsList/ProductsList';\r\nimport {\r\n  getProducts,\r\n  deleteProduct,\r\n  setProduct,\r\n} from './redux/products/products-operations';\r\nimport { getProduct } from './redux/products/products-selectors';\r\nimport Modal from './components/Modal/Modal';\r\n\r\nfunction App() {\r\n  const products = useSelector(getProduct);\r\n  const dispatch = useDispatch();\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => dispatch(getProducts()), [dispatch]);\r\n\r\n  const onItmClick = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const deleteProd = id => {\r\n    dispatch(deleteProduct(id)).then(() => {\r\n      dispatch(getProducts());\r\n    });\r\n  };\r\n  const onClose = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Products</h2>\r\n      <button type=\"button\" onClick={onItmClick}>\r\n        Add product\r\n      </button>\r\n      <ProductsList products={products} deleteProd={deleteProd} />\r\n      {showModal && <Modal onClose={onClose} />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { nanoid } from 'nanoid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addProduct = createAction('product/add', data => ({\n  payload: {\n    ...data,\n  },\n}));\n\nconst deleteProduct = createAction('product/delete');\n\nconst getProducts = createAction('product/get');\nconst getProductsById = createAction('product/getId');\nconst editProductsById = createAction('product/edit');\n\nexport default {\n  addProduct,\n  deleteProduct,\n  getProducts,\n  getProductsById,\n  editProductsById,\n};\n","import actions from './products-actions';\nimport { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  getProducts,\n  deleteProduct,\n  setProduct,\n  getProductById,\n  editProductById,\n} from './products-operations';\n\nconst items = createReducer([], {\n  [getProducts.fulfilled]: (state, { payload }) => payload,\n  [setProduct.fulfilled]: (state, { payload }) => {\n    return [...state, payload];\n  },\n  [deleteProduct.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n  [getProductById.fulfilled]: (state, { payload }) => payload,\n  [editProductById.fulfilled]: (state, { payload }) => {\n    return [...state, payload];\n  },\n});\n\nexport default combineReducers({\n  items,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport productsReducer from './products/products-reducer';\n\nexport const store = configureStore({\n  reducer: {\n    products: productsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware => [...getDefaultMiddleware()],\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}